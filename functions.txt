acl aclCreate ( string aclName )
aclgroup aclCreateGroup ( string groupName )
bool aclDestroy ( acl theACL )
bool aclDestroyGroup ( aclgroup aclGroup )
acl aclGet ( string aclName )
aclgroup aclGetGroup ( string groupName )
string aclGetName ( acl theAcl )
bool aclGetRight ( acl theAcl, string rightName )
bool aclGroupAddACL ( aclgroup theGroup, acl theACL )
bool aclGroupAddObject ( aclgroup theGroup, string theObjectName )
string aclGroupGetName ( aclGroup )
table aclGroupList ()
table of acl aclGroupListACL ( aclgroup theGroup )
table of string aclGroupListObjects ( aclgroup theGroup )
bool aclGroupRemoveACL ( aclgroup theGroup, acl theACL )
bool aclGroupRemoveObject ( aclgroup theGroup, string theObjectString )
table aclList ()
table aclListRights ( acl theACL, string allowedType )
bool aclReload ()
bool aclRemoveRight ( acl theAcl, string rightName )
bool aclSave ()
bool aclSetRight ( acl theAcl, string rightName, bool hasAccess )
account addAccount ( string name, string pass )
ban addBan ( [ string IP, string Username, string Serial, player responsibleElement, string reason, int seconds = 0 ] )
bool addCommandHandler ( string commandName, function handlerFunction, [bool restricted = false, bool caseSensitive = true] )
bool addDebugHook( string hookType, function callbackFunction[, table nameList ] )
bool addEvent ( string eventName [, bool allowRemoteTrigger = false ] )
bool addEventHandler ( string eventName, element attachedTo, function handlerFunction, [ bool getPropagated = true, string priority = "normal" ] )
bool addPedClothes ( ped thePed, string clothesTexture, string clothesModel, int clothesType )
xmlnode addResourceConfig ( string filePath, [ string filetype = "server" ] )
xmlnode addResourceMap ( string filePath, [ int dimension = 0 ] )
bool addVehicleSirens ( vehicle theVehicle, int sirenCount, int sirenType, [bool 360flag = false, bool checkLosFlag = true, bool useRandomiser flag = true, bool silentFlag = false )
bool addVehicleUpgrade ( vehicle theVehicle, int upgrade )
bool areTrafficLightsLocked ( )
bool attachElements ( element theElement, element theAttachToElement, [ float xPosOffset, float yPosOffset, float zPosOffset, float xRotOffset, float yRotOffset, float zRotOffset ] )
bool attachTrailerToVehicle ( vehicle theVehicle, vehicle theTrailer )
ban banPlayer ( player bannedPlayer, [ bool IP = true, bool Username = false, bool Serial = false, player responsiblePlayer = nil, string reason = nil, int seconds = 0 ] )
string base64Decode(string data)
string base64Encode ( string data )
bindKey ( player thePlayer, string key, string keyState, function handlerFunction,  [ var arguments, ... ] )
uint bitAnd ( uint var1, uint var2, ... )
uint bitExtract ( uint var, int field, [int width = 1] )
uint bitNot ( uint var )
uint bitOr ( uint var1, uint var2, ... )
uint bitReplace ( uint var, uint replaceValue, int field, int width = 1 )
bool bitTest ( uint var1, uint var2, ... )
uint bitXor ( uint var1, uint var2, ... )
bool blowVehicle ( vehicle vehicleToBlow, [ bool explode=true ] )
bool breakObject ( object theObject )
bool callRemote ( string host[, int connectionAttempts = 10 ], string resourceName, string functionName, callback callbackFunction, [ arguments... ] )
bool canPedBeKnockedOffBike ( ped thePed )
bool cancelEvent ( [ bool cancel = true, string reason = "" ] )
bool cancelLatentEvent( player thePlayer, int handle )
bool clearElementVisibleTo ( element theElement )
element cloneElement ( element theElement, [ float xPos = 0, float yPos = 0, float zPos = 0, bool cloneChildren = false ] )
bool copyAccountData ( account theAccount, account fromAccount )
resource copyResource ( resource theResource, string newResourceName [, string organizationalDir ] )
int countPlayersInTeam ( team theTeam )
blip createBlip ( float x, float y, float z [, int icon = 0, int size = 2, int r = 255, int g = 0, int b = 0, int a = 255, int ordering = 0, float visibleDistance = 99999.0, visibleTo = getRootElement( ) ] )
blip createBlipAttachedTo ( element elementToAttachTo, [int icon=0, int size=2, int r=255, int g=0, int b=0, int a=255, int ordering=0, float visibleDistance=99999.0, visibleTo = getRootElement()] )
colshape createColCircle ( float fX, float fY, float radius )
colshape createColCuboid ( float fX, float fY, float fZ, float fWidth, float fDepth, float fHeight )
colshape createColPolygon ( float fX, float fY, float fX1, float fY1, float fX2, float fY2, float fX3, float fY3, ... )
colshape createColRectangle ( float fX, float fY, float fWidth, float fHeight)
colshape createColSphere ( float fX, float fY, float fZ, float fRadius )
colshape createColTube ( float fX, float fY, float fZ, float fRadius, float fHeight)
element createElement ( string elementType, [ string elementID = nil ] )
bool createExplosion ( float x, float y, float z, int theType [, player creator = nil )
bool createFire ( float x, float y, float z [, float size = 1.8 ] )
marker createMarker ( float x, float y, float z [, string theType = "checkpoint", float size = 4.0, int r = 0, int g = 0, int b = 255, int a = 255, visibleTo = getRootElement( ) ] )
object createObject ( int modelid, float x, float y, float z, [ float rx, float ry, float rz, bool isLowLOD = false ] )
ped createPed ( int modelid, float x, float y, float z [, float rot = 0.0, bool synced = true ] )
pickup createPickup ( float x, float y, float z, int theType, int amount/weapon/model, [ int respawnTime = 30000, int ammo = 50 ] )
projectile createProjectile ( element creator, int weaponType [, float posX, float posY, float posZ, float force = 1.0, element target = nil, float rotX, float rotY, float rotZ, float velX, float velY, float velZ, int model ] )
radararea createRadarArea ( float leftX, float bottomY, float sizeX, float sizeY, [ int r = 255, int g = 0, int b = 0, int a = 255, element visibleTo = getRootElement() ] )
resource createResource ( string resourceName [, string organizationalDir ] )
bool createSWATRope ( float fx, float fy, float fZ, int duration )
team createTeam ( string teamName, [int colorR = 255, int colorG = 255, int colorB = 255] )
vehicle createVehicle ( int model, float x, float y, float z [, float rx, float ry, float rz, string numberplate, bool bDirection, int variant1, int variant2 ] )
water createWater ( int x1, int y1, float z1, int x2, int y2, float z2, int x3, int y3, float z3 [, int x4, int y4, float z4 ] [, bool bShallow = false ] )
weapon createWeapon ( string theType, float x, float y, float z )
element dbConnect ( string databaseType, string host [, string username = "", string password = "", string options = "" ] )
bool dbExec ( element databaseConnection, string query [, var param1 [, var param2 ...]] )
bool dbFree ( handle queryHandle )
table dbPoll ( handle queryHandle, int timeout )
handle dbQuery ( [ function callbackFunction, [ table callbackArguments, ] ] element databaseConnection, string query [, var param1 [, var param2 ...]] )
bool deleteResource ( string resourceName )
bool destroyElement ( element elementToDestroy )
bool detachElements ( element theElement, [ element theAttachToElement ] )
bool detachTrailerFromVehicle ( vehicle theVehicle [, vehicle theTrailer = nil ] )
bool detonateSatchels ( )
bool doesPedHaveJetPack ( ped thePed )
string dxConvertPixels ( string pixels, string newFormat [, int quality = 80 ] )
element dxCreateFont ( string filepath[, int size=9, bool bold=false ] )
element dxCreateRenderTarget ( int width, int height [, bool withAlpha = false ] )
element dxCreateScreenSource ( int width, int height )
element, string dxCreateShader ( string filepath [, float priority = 0, float maxDistance = 0, bool layered = false, string elementTypes = "world,vehicle,object,other" ] )
element dxCreateTexture ( string filepath [, string textureFormat = "argb", bool mipmaps = true, string textureEdge = "wrap" ] )
element dxCreateTexture ( string pixels [, string textureFormat = "argb", bool mipmaps = true, string textureEdge = "wrap" ] )
element dxCreateTexture ( int width, int height [, string textureFormat = "argb", string textureEdge = "wrap", string textureType = "2d", int depth = 1 ] )
bool dxDrawImage ( float posX, float posY, float width, float height, mixed image [, float rotation = 0, float rotationCenterOffsetX = 0, float rotationCenterOffsetY = 0, int color = tocolor(255,255,255), bool postGUI = false ] )
bool dxDrawImageSection ( float posX, float posY, float width, float height, float u, float v, float usize, float vsize, mixed image, [ float rotation = 0, float rotationCenterOffsetX = 0, float rotationCenterOffsetY = 0, int color = white, bool postGUI = false ] )
bool dxDrawLine ( int startX, int startY, int endX, int endY, int color, [float width=1, bool postGUI=false] )
bool dxDrawLine3D ( float startX, float startY, float startZ, float endX, float endY, float endZ, int color[, int width, bool postGUI ] )
bool dxDrawMaterialLine3D ( float startX, float startY, float startZ, float endX, float endY, float endZ, element material, int width, [, int color = white, float faceTowardX, float faceTowardY, float faceTowardZ ] )
bool dxDrawMaterialSectionLine3D ( float startX, float startY, float startZ, float endX, float endY, float endZ, float u, float v, float usize, float vsize, element material, int width [, int color = white, float faceTowardX, float faceTowardY, float faceTowardZ ] )
bool dxDrawRectangle ( int startX, int startY, float width, float height [, int color = white, bool postGUI = false] )
bool dxDrawText ( string text, float left, float top [, float right=left, float bottom=top, int color=white, float scale=1, mixed font="default", string alignX="left", string alignY="top", bool clip=false, bool wordBreak=false, bool postGUI=false, bool colorCoded=false, bool subPixelPositioning=false, float fRotation=0, float fRotationCenterX=0, float fRotationCenterY=0 ] )
string dxGetBlendMode ( )
int dxGetFontHeight ( [float scale=1, mixed font="default"] )
int, int [, int] dxGetMaterialSize ( element material )
int r,g,b,a dxGetPixelColor( string pixels, int x, int y )
string dxGetPixelsFormat ( string pixels )
int int dxGetPixelsSize ( string pixels )
table dxGetStatus ( )
float dxGetTextWidth ( string text, [float scale=1, mixed font="default"] )
string dxGetTexturePixels ( [ int surfaceIndex = 0, ] element texture [, int x = 0, int y = 0, int width = 0, int height = 0 ] )
bool dxSetAspectRatioAdjustmentEnabled ( bool bEnabled [, float sourceRatio = 4/3 ] )
bool dxSetBlendMode ( string blendMode )
bool dxSetPixelColor ( string pixels, int x, int y, int r, int g, int b [, int a = 255 ] )
bool dxSetRenderTarget ( [ element renderTarget, bool clear = false ] )
bool dxSetShaderTessellation ( element theShader, int tessellationX, int tessellationY )
bool dxSetShaderTransform ( element theShader, float rotationX, float rotationY, float rotationZ, [ float rotationCenterOffsetX = 0, float rotationCenterOffsetY = 0, float rotationCenterOffsetZ = 0, bool bRotationCenterOffsetOriginIsScreen = false, float perspectiveCenterOffsetX = 0, float perspectiveCenterOffsetY = 0, bool bPerspectiveCenterOffsetOriginIsScreen = false ] )
bool dxSetShaderValue ( element theShader, string parameterName, mixed value )
bool dxSetTestMode ( string testMode )
bool dxSetTextureEdge ( texture theTexture, string textureEdge [, int border-color] )
bool dxSetTexturePixels ( [ int surfaceIndex = 0, ] element texture, string pixels [, int x = 0, int y = 0, int width = 0, int height = 0 ] )
bool dxUpdateScreenSource ( element screenSource [, bool resampleNow = false ] )
bool engineApplyShaderToWorldTexture ( element shader, string textureName [, element targetElement = nil, bool appendLayers = true ] )
int engineGetModelIDFromName ( string modelName )
float engineGetModelLODDistance ( int model )
string engineGetModelNameFromID ( int modelID )
table engineGetModelTextureNames( string modelId = "" )
table engineGetVisibleTextureNames ( [ string nameFilter = "*", string modelId = "" ] )
bool engineImportTXD ( txd texture, int model_id )
col engineLoadCOL ( string col_file )
dff engineLoadDFF ( string dff_file, int model_id )
txd engineLoadTXD ( string txd_file [, bool filteringEnabled = true ] )
bool engineRemoveShaderFromWorldTexture ( element shader, string textureName [, element targetElement = nil ] )
bool engineReplaceCOL ( col theCol, int modelID )
bool engineReplaceModel ( dff theModel, int modelID [, bool alphaTransparency = false ] )
bool engineRestoreCOL ( int modelID )
bool engineRestoreModel ( int modelID )
bool engineSetAsynchronousLoading ( bool enable, bool force )
bool engineSetModelLODDistance ( int model, float distance )
bool executeCommandHandler ( string commandName, player thePlayer, [ string args ] )
bool fadeCamera ( player thePlayer, bool fadeIn, [ float timeToFade = 1.0, int red = 0, int green = 0, int blue = 0 ] )
bool fetchRemote ( string URL[, int connectionAttempts = 10 ], callback callbackFunction, [ string postData = "", bool postIsBinary = false, [ arguments... ] ] )
bool fileClose ( file theFile )
bool fileCopy ( string filePath, string copyToFilePath [, bool overwrite = false ] )
file fileCreate ( string filePath )
bool fileDelete ( string filePath )
bool fileExists ( string filePath )
bool fileFlush ( file theFile )
int fileGetPos ( file theFile )
int fileGetSize ( file theFile )
bool fileIsEOF ( file theFile )
file fileOpen ( string filePath [, bool readOnly = false ])
string fileRead ( file theFile, int count )
bool fileRename ( string filePath, string newFilePath )
int fileSetPos ( file theFile, int offset )
int fileWrite ( file theFile, string string1 [, string string2, string string3 ...])
bool fireWeapon ( weapon theWeapon )
bool fixVehicle ( vehicle theVehicle )
bool forcePlayerMap ( player thePlayer, bool forceOn )
var fromJSON ( string json )
bool fxAddBlood ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ, [int count=1, float brightness=1.0] )
bool fxAddBulletImpact ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ, [int smokeSize=1, int sparkCount=1, float smokeIntensity=1.0] )
bool fxAddBulletSplash ( float posX, float posY, float posZ )
bool fxAddDebris ( float posX, float posY, float posZ, [int colorR=255, int colorG=0, int colorB=0, int colorA=255, float scale=1.0, int count=1] )
bool fxAddFootSplash ( float posX, float posY, float posZ )
bool fxAddGlass ( float posX, float posY, float posZ, [int colorR=255, int colorG=0, int colorB=0, int colorA=255, float scale=1.0, int count=1] )
bool fxAddGunshot ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ, [bool includeSparks=true] )
bool fxAddPunchImpact ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ )
bool fxAddSparks ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ, [float force=1, int count=1, float acrossLineX=0, float acrossLineY=0, float acrossLineZ=0, bool blur=false, float spread=1, float life=1] )
bool fxAddTankFire ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ )
bool fxAddTyreBurst ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ )
bool fxAddWaterHydrant ( float posX, float posY, float posZ )
bool fxAddWaterSplash ( float posX, float posY, float posZ )
bool fxAddWood ( float posX, float posY, float posZ, float dirX, float dirY, float dirZ, [int count=1, float brightness=1.0] )
var get ( string settingName )
account getAccount ( string username, [ string password ] )
string getAccountData ( account theAccount, string key )
string getAccountName ( account theAccount )
player getAccountPlayer ( account theAccount )
table getAccounts ()
float getAircraftMaxHeight ( )
float getAircraftMaxVelocity ()
table getAlivePlayers ( )
table getAllAccountData ( account theAccount )
table getAllElementData ( element theElement )
float getAnalogControlState ( string controlName )
table getAttachedElements ( element theElement )
string getBanAdmin ( ban theBan )
string getBanIP ( ban theBan )
string getBanNick ( ban theBan )
string getBanReason ( ban theBan )
string getBanSerial ( ban theBan )
int getBanTime ( ban theBan )
string getBanUsername ( ban theBan )
table getBans ()
bool getBirdsEnabled ()
int int int int getBlipColor ( blip theBlip )
int getBlipIcon ( blip theBlip )
int getBlipOrdering ( blip theBlip )
int getBlipSize ( blip theBlip )
float getBlipVisibleDistance ( blip theBlip )
int getPlayerBlurLevel ( player thePlayer )
string getBodyPartName ( int bodyPartID )
table getBoundKeys ( string command/control )
element getCamera ()
string getCameraGoggleEffect (  )
int getCameraInterior ( player thePlayer )
float float float float float float float float getCameraMatrix (player thePlayer)
element getCameraTarget ( player thePlayer )
int getCameraViewMode (  )
string getCancelReason ( )
bool/int/table getChatboxLayout ( [ string CVar ] )
string string getClothesByTypeIndex ( int clothesType, int clothesIndex )
string getClothesTypeName ( int clothesType )
bool getCloudsEnabled ()
int int int int getColorFromString ( string theColor )
table getCommandsBoundToKey ( string theKey, string keyState )
bool getControlState ( player thePlayer, string controlName )
int getCursorAlpha( )
float float float float float getCursorPosition ( )
table getDeadPlayers()
bool getDevelopmentMode ()
float getDistanceBetweenPoints2D ( float x1, float y1, float x2, float y2 )
float getDistanceBetweenPoints3D ( float x1, float y1, float z1, float x2, float y2, float z2 )
float getEasingValue( float fProgress, string strEasingType [, float fEasingPeriod, float fEasingAmplitude, float fEasingOvershoot] )
int getElementAlpha ( element theElement )
float, float, float, float, float, float getElementAttachedOffsets ( element theElement )
element getElementAttachedTo ( element theElement )
float float float float float float getElementBoundingBox ( element theElement )
element getElementByID ( string id, [ int index = 0 ] )
element getElementByIndex ( string theType, int index )
element getElementChild ( element parent, int index )
table getElementChildren ( element parent, [ string theType = nil ] )
int getElementChildrenCount ( element parent )
colshape getElementColShape ( element theElement )
bool getElementCollisionsEnabled ( element theElement )
var getElementData ( element theElement, string key [, inherit = true] )
int getElementDimension ( element theElement )
float getElementDistanceFromCentreOfMassToBaseOfModel ( element theElement )
float getElementHealth ( element theElement )
string getElementID ( element theElement )
int getElementInterior ( element theElement )
table getElementMatrix ( element theElement [, bool legacy = true ] )
int getElementModel ( element theElement )
element getElementParent ( element theElement )
float, float, float getElementPosition ( element theElement )
float getElementRadius ( element theElement )
float float float getElementRotation ( element theElement [, string rotOrder = "default" ] )
element getElementSyncer ( element theElement )
string getElementType ( element theElement )
float float float getElementVelocity ( element theElement )
string getElementZoneName ( element theElement, [bool citiesonly=false] )
table getElementsByType ( string theType, [ element startat=getRootElement() ] )
table getElementsWithinColShape ( colshape shape, [ string elemType = nil ] )
table getEventHandlers ( string eventName, element attachedTo )
int getFPSLimit ()
float getFarClipDistance ()
float getFogDistance ()
table getFunctionsBoundToKey ( player thePlayer , string theKey )
float getGameSpeed()
string getGameType ()
float, float, float, float getGarageBoundingBox ( int garageID )
float, float, float getGaragePosition ( int garageID )
float, float, float getGarageSize ( int garageID )
float getGravity()
float getGroundPosition ( float x, float y, float z )
int, int, int, int, int, int, int, int, bool getHeatHaze ( )
bool getHeliBladeCollisionsEnabled ( vehicle theVehicle )
float getHelicopterRotorSpeed ( vehicle heli )
bool getInteriorFurnitureEnabled ( int roomID )
bool getInteriorSoundsEnabled ( )
float getJetpackMaxHeight ( )
bool getJetpackWeaponEnabled(string weapon)
string getKeyBoundToCommand( string command )
string getKeyBoundToFunction( player thePlayer, function theFunction )
bool getKeyState ( string keyName )
table getLatentEventHandles ( player thePlayer )
table getLatentEventStatus( player thePlayer, int handle )
table getLoadedModules ()
player getLocalPlayer ( )
element getLowLODElement ( element theElement )
string getMapName ()
int, int, int, int getMarkerColor ( marker theMarker )
int getMarkerCount ( )
string getMarkerIcon ( marker theMarker )
float getMarkerSize ( marker myMarker )
float float float getMarkerTarget ( marker theMarker )
string getMarkerType ( marker theMarker )
int getMaxPlayers ()
int getMinuteDuration ( )
table getModelHandling ( int modelId )
table getModuleInfo ( string moduleName )
int getMoonSize ()
table getNetworkStats ( )
float getObjectMass ( object theObject )
float getObjectScale ( object theObject )
bool getOcclusionsEnabled ( )
table getOriginalHandling ( int modelID )
int getOriginalWeaponProperty ( int weaponID/string weaponName, string weaponSkill, string property )
int getPedAmmoInClip ( ped thePed [, int weaponSlot = current ] )
float getPedAnalogControlState ( ped thePed, string controlName )
string string getPedAnimation ( ped thePed )
float getPedArmor ( ped thePed )
float float float getPedBonePosition ( ped thePed, int bone )
float getPedCameraRotation( ped thePed )
string string getPedClothes ( ped thePed, int clothesType )
element getPedContactElement ( ped thePed )
bool getPedControlState ( ped thePed, string control )
int getPedFightingStyle ( ped thePed )
float getPedGravity ( ped thePed )
string getPedMoveState ( ped thePed )
vehicle getPedOccupiedVehicle ( ped thePed )
int getPedOccupiedVehicleSeat ( ped thePed )
float getPedOxygenLevel ( ped thePed )
float getPedRotation ( ped thePed )
string getPedSimplestTask ( ped thePed )
float getPedStat ( ped thePed, int stat )
element getPedTarget ( ped thePed )
float float float getPedTargetCollision ( ped targetingPed )
float float float getPedTargetEnd ( ped targetingPed )
float float float getPedTargetStart ( ped targetingPed )
string getPedTask ( ped thePed, string priority, int taskType )
int getPedTotalAmmo ( ped thePed, [ int weaponSlot = current ] )
string string getPedVoice ( ped thePed )
int getPedWeapon ( ped thePed, [ int weaponSlot = current ] )
float, float, float getPedWeaponMuzzlePosition ( ped thePed )
int getPedWeaponSlot ( ped thePed )
table table getPerformanceStats ( string category [, string options = "", string filter = "" ] )
int getPickupAmmo ( pickup thePickup )
int getPickupAmount ( pickup thePickup )
int getPickupRespawnInterval ( pickup thePickup )
int getPickupType ( pickup thePickup )
int getPickupWeapon ( pickup thePickup )
table getPlayerACInfo( element thePlayer )
account getPlayerAccount ( player thePlayer )
string getPlayerAnnounceValue ( element thePlayer, string key )
int getPlayerBlurLevel ( player thePlayer )
int getPlayerCount ( )
player getPlayerFromName ( string playerName )
string getPlayerIP ( player thePlayer )
int getPlayerIdleTime ( player thePlayer )
int,int,int,int getPlayerMapBoundingBox ()
int/bool getPlayerMoney ( player thePlayer )
string getPlayerName ( player thePlayer )
int, int, int getPlayerNametagColor ( player thePlayer )
string getPlayerNametagText ( player thePlayer )
int getPlayerPing ( player thePlayer )
string getPlayerSerial ( player thePlayer )
team getPlayerTeam ( player thePlayer )
string getPlayerVersion ( player thePlayer )
int getPlayerWantedLevel ( player thePlayer )
table getPlayersInTeam ( team theTeam )
int getProjectileCounter ( projectile projectile )
element getProjectileCreator ( projectile theProjectile )
float getProjectileForce ( projectile theProjectile )
element getProjectileTarget ( projectile theProjectile )
int getProjectileType ( projectile theProjectile )
int, int, int, int getRadarAreaColor ( radararea theRadararea )
float, float getRadarAreaSize ( radararea theRadararea )
int getRadioChannel ( )
string getRadioChannelName ( int id )
float getRainLevel( )
player getRandomPlayer ( )
table getRealTime( [int seconds = current] )
table getResourceACLRequests ( resource theResource )
xmlnode getResourceConfig ( string filePath )
element getResourceDynamicElementRoot ( resource theResource )
table getResourceExportedFunctions ( resource res )
resource getResourceFromName ( string resourceName )
element getResourceGUIElement ( [resource theResource=getThisResource()] )
string getResourceInfo ( resource theResource, string attribute )
int getResourceLastStartTime ( resource theResource )
string getResourceLoadFailureReason ( resource theResource )
int getResourceLoadTime ( resource res )
element getResourceMapRootElement ( resource theResource, string mapName )
string getResourceName ( resource res )
element getResourceRootElement ( [resource theResource=getThisResource()] )
string getResourceState ( resource theResource )
table getResources ()
element getRootElement ( )
string getRuleValue ( string key )
bool getSFXStatus ( string audioContainer )
float float getScreenFromWorldPosition ( float x, float y, float z, [ float edgeTolerance=0, bool relative=true ] )
string getServerConfigSetting ( string name )
int getServerHttpPort ( )
string getServerName ( )
string getServerPassword ()
int getServerPort ( )
int, int, int, int, int, int getSkyGradient ( )
int getSlotFromWeapon ( int weaponid )
int getSoundBPM ( element sound )
table getSoundEffects ( element sound )
table getSoundFFTData ( element sound, int iSamples [, int iBands = 0 ] )
float getSoundLength ( element theSound )
int, int getSoundLevelData ( element theSound )
int getSoundMaxDistance ( element sound )
table getSoundMetaTags ( element sound )
int getSoundMinDistance ( element sound )
float getSoundPan ( element theSound )
float getSoundPosition ( element theSound )
float, float, float, bool getSoundProperties( element sound )
float getSoundSpeed ( element theSound )
float getSoundVolume ( element theSound )
table getSoundWaveData ( element sound, int iSamples )
int, int, int, int, int, int getSunColor ( )
float getSunSize ( )
int, int, int getTeamColor ( team theTeam )
bool getTeamFriendlyFire ( team theTeam )
team getTeamFromName ( string teamName )
string getTeamName ( team theTeam )
resource getThisResource ( )
int getTickCount ()
int int getTime ()
int, int, int getTimerDetails ( timer theTimer )
table getTimers ( [ theTime = nil ] )
int getTrafficLightState ( )
bool getTrainDirection ( vehicle train )
float getTrainSpeed ( vehicle train )
int int getTypeIndexFromClothes ( string clothesTexture, string clothesModel )
int getUnbanTime ( ban theBan )
table getValidPedModels ( )
int getVehicleAdjustableProperty ( vehicle theVehicle )
int int int int getVehicleColor ( vehicle theVehicle )
table getVehicleCompatibleUpgrades ( vehicle theVehicle, [ int slot ] )
float, float, float getVehicleComponentPosition ( vehicle theVehicle, string theComponent )
float, float, float getVehicleComponentRotation ( vehicle theVehicle, string theComponent )
bool getVehicleComponentVisible ( vehicle theVehicle, string theComponent )
table getVehicleComponents ( vehicle theVehicle )
player getVehicleController ( vehicle theVehicle )
int getVehicleCurrentGear ( vehicle theVehicle )
float getVehicleDoorOpenRatio ( vehicle theVehicle, int door )
int getVehicleDoorState ( vehicle theVehicle, int door )
bool getVehicleEngineState ( vehicle theVehicle )
float float float getVehicleGravity ( vehicle theVehicle )
table getVehicleHandling ( element theVehicle )
int, int, int getVehicleHeadLightColor ( vehicle theVehicle )
bool getVehicleLandingGearDown ( vehicle theVehicle )
int getVehicleLightState ( vehicle theVehicle, int light )
int getVehicleMaxPassengers ( vehicle theVehicle / int modelID )
int getVehicleModelFromName ( string name )
string getVehicleName ( vehicle theVehicle )
string getVehicleNameFromModel ( int model )
int getVehicleNitroCount ( vehicle theVehicle )
float getVehicleNitroLevel ( vehicle theVehicle )
player getVehicleOccupant ( vehicle theVehicle, [ int seat=0 ] )
table getVehicleOccupants ( vehicle theVehicle )
int getVehicleOverrideLights ( vehicle theVehicle )
int getVehiclePaintjob ( vehicle theVehicle )
int getVehiclePanelState ( vehicle theVehicle, int panel )
string getVehiclePlateText ( vehicle theVehicle )
table getVehicleSirenParams ( vehicle theVehicle )
table getVehicleSirens ( vehicle theVehicle )
bool getVehicleSirensOn ( vehicle theVehicle )
vehicle getVehicleTowedByVehicle ( vehicle theVehicle )
vehicle getVehicleTowingVehicle ( vehicle theVehicle )
float float float getVehicleTurnVelocity ( vehicle theVehicle )
float, float getVehicleTurretPosition ( vehicle turretVehicle )
string getVehicleType ( vehicle theVehicle )
int getVehicleUpgradeOnSlot ( vehicle theVehicle, int slot )
string getVehicleUpgradeSlotName ( int slot/upgrade )
table getVehicleUpgrades ( vehicle theVehicle )
int, int getVehicleVariant ( vehicle theVehicle )
int, int, int, int getVehicleWheelStates ( vehicle theVehicle )
table getVehiclesOfType ( int model )
table getVersion ( )
int, int, int, int getWaterColor ( )
float getWaterLevel ( float posX, float posY, float posZ [ , bool bCheckWaves = false ] )
float getWaterLevel ( water theWater )
int int float getWaterVertexPosition ( water theWater, int vertexIndex )
float getWaveHeight()
int getWeaponAmmo ( weapon theWeapon )
int getWeaponClipAmmo ( weapon theWeapon )
int getWeaponFiringRate ( weapon theWeapon )
value getWeaponFlags ( weapon theWeapon, string theFlag )
int getWeaponIDFromName ( string name )
string getWeaponNameFromID ( int id )
player getWeaponOwner ( weapon theWeapon )
int getWeaponProperty ( int weaponID/string weaponName, string weaponSkill, string property )
string getWeaponState ( weapon theWeapon )
element getWeaponTarget ( weapon theWeapon )
int, int getWeather()
int, int, int getWindVelocity ( )
float, float, float getWorldFromScreenPosition ( float x, float y, float depth )
string getZoneName ( float x, float y, float z, [bool citiesonly=false] )
string gettok ( string text, int tokenNumber, string / int separatingCharacter )
bool givePedJetPack ( ped thePed )
bool givePlayerMoney ( player thePlayer, int amount )
bool giveWeapon ( ped thePlayer, int weapon [, int ammo=30, bool setAsCurrent=false ] )
bool guiBringToFront ( element guiElement )
bool guiCheckBoxGetSelected ( element theCheckbox )
bool guiCheckBoxSetSelected ( element theCheckbox, bool state )
int guiComboBoxAddItem( element comboBox, string value )
bool guiComboBoxClear ( element comboBox )
string guiComboBoxGetItemText ( element comboBox, int itemId )
int guiComboBoxGetSelected ( element comboBox )
bool guiComboBoxRemoveItem( element comboBox, int itemId )
bool guiComboBoxSetItemText ( element comboBox, int itemId, string text )
bool guiComboBoxSetSelected ( element comboBox, int itemIndex )
element guiCreateButton ( float x, float y, float width, float height, string text, bool relative, [ element parent = nil ] )
element guiCreateCheckBox ( float x, float y, float width, float height, string text, bool selected, bool relative, [element parent = nil] )
element guiCreateComboBox ( float x, float y, float width, float height, string caption, bool relative, [ element parent = nil ] )
element guiCreateEdit ( float x, float y, float width, float height, string text, bool relative, [element parent = nil] )
element guiCreateFont ( string filepath[, int size=9 ] )
element guiCreateGridList ( float x, float y, float width, float height, bool relative, [ element parent = nil ] )
element guiCreateLabel ( float x, float y, float width, float height, string text, bool relative, [element parent = nil] )
gui-memo guiCreateMemo ( float x, float y, float width, float height, string text, bool relative, [element parent = nil] )
element guiCreateProgressBar ( float x, float y, float width, float height, bool relative, [element parent = nil] )
element guiCreateRadioButton ( float x, float y, float width, float height, string text, bool relative, [element parent = nil] )
gui-scrollbar guiCreateScrollBar ( float x, float y, float width, float height, bool horizontal, bool relative, [gui-element parent = nil])
element guiCreateScrollPane( float x, float y, float width, float height, bool relative, [gui-element parent = nil])
element guiCreateStaticImage ( float x, float y, float width, float height, string path, bool relative, [element parent = nil] )
element guiCreateTab ( string text, element parent )
element guiCreateTabPanel ( float x, float y, float width, float height, bool relative, [element parent = nil ] )
element guiCreateWindow ( float x, float y, float width, float height, string titleBarText, bool relative )
bool guiDeleteTab ( element tabToDelete, element tabPanel )
int guiEditGetCaretIndex ( element theElement )
bool guiEditSetCaretIndex ( element theElement, int index )
bool guiEditSetMasked ( element theElement, bool status )
bool guiEditSetMaxLength ( element theElement, int length )
bool guiEditSetReadOnly ( element editField, bool status )
float guiGetAlpha ( element guiElement )
bool guiGetEnabled ( element guiElement )
string, element guiGetFont ( element guiElement )
bool guiGetInputEnabled ( )
string guiGetInputMode ( )
float, float guiGetPosition ( element guiElement, bool relative )
table guiGetProperties ( element guiElement )
string guiGetProperty ( element guiElement, string property )
float float guiGetScreenSize ()
element guiGetSelectedTab ( element tabPanel )
float float guiGetSize ( element theElement, bool relative )
string guiGetText ( element guiElement )
bool guiGetVisible ( element guiElement )
int guiGridListAddColumn ( element gridList, string title, float width )
int guiGridListAddRow ( element gridList )
bool guiGridListAutoSizeColumn ( element gridList, int columnIndex )
bool guiGridListClear ( element gridList )
int guiGridListGetColumnCount ( element gridList )
string guiGridListGetColumnTitle( element guiGridlist, int columnIndex )
float guiGridListGetHorizontalScrollPosition( element guiGridlist )
int int int int guiGridListGetItemColor ( element gridList, int rowIndex, int columnIndex )
var guiGridListGetItemData ( element gridList, int rowIndex, int columnIndex )
string guiGridListGetItemText ( element gridList, int rowIndex, int columnIndex )
int guiGridListGetRowCount ( element gridList )
int guiGridListGetSelectedCount ( element gridList )
int, int guiGridListGetSelectedItem ( element gridList )
table guiGridListGetSelectedItems ( element gridList )
float guiGridListGetVerticalScrollPosition( element guiGridlist )
int guiGridListInsertRowAfter ( element gridList, int rowIndex )
bool guiGridListRemoveColumn ( element gridList, int columnIndex )
bool guiGridListRemoveRow ( element gridList, int rowIndex )
bool guiGridListSetColumnTitle( element guiGridlist, int columnIndex, string title )
bool guiGridListSetColumnWidth ( element gridList, int columnIndex, number width, bool relative )
bool guiGridListSetHorizontalScrollPosition( element guiGridlist, float fPosition )
bool guiGridListSetItemColor ( element gridList, int rowIndex, int columnIndex, int red, int green, int blue[, int alpha = 255 ] )
bool guiGridListSetItemData ( element gridList, int rowIndex, int columnIndex, var data )
bool guiGridListSetItemText ( element gridList, int rowIndex, int columnIndex, string text, bool section, bool number )
bool guiGridListSetScrollBars ( element guiGridlist, bool horizontalBar, bool verticalBar )
bool guiGridListSetSelectedItem ( element gridList, int rowIndex, int columnIndex [, bool bReset = true ] )
bool guiGridListSetSelectionMode ( guiElement gridlist, int mode )
bool guiGridListSetSortingEnabled ( element guiGridlist, bool enabled )
bool guiGridListSetVerticalScrollPosition( element guiGridlist, float fPosition )
int int int guiLabelGetColor ( gui-element theLabel )
float guiLabelGetFontHeight ( element theLabel )
float guiLabelGetTextExtent ( element theLabel )
bool guiLabelSetColor ( element theElement, int red, int green, int blue )
bool guiLabelSetHorizontalAlign ( element theLabel, string align, [ bool wordwrap = false ] )
bool guiLabelSetVerticalAlign ( element theLabel, string align )
int guiMemoGetCaretIndex ( element theElement )
bool guiMemoSetCaretIndex ( gui-memo theMemo, int index )
bool guiMemoSetReadOnly ( gui-memo theMemo, bool status )
bool guiMoveToBack( element guiElement )
float guiProgressBarGetProgress ( progressBar theProgressbar )
bool guiProgressBarSetProgress ( progressBar theProgressbar, float progress )
bool guiRadioButtonGetSelected( element guiRadioButton )
bool guiRadioButtonSetSelected ( element guiRadioButton, bool state )
float guiScrollBarGetScrollPosition ( gui-scrollBar theScrollBar )
bool guiScrollBarSetScrollPosition ( gui-scrollBar theScrollBar, float amount )
float guiScrollPaneGetHorizontalScrollPosition ( element horizontalScrollPane )
float guiScrollPaneGetVerticalScrollPosition ( element verticalScrollPane )
bool guiScrollPaneSetHorizontalScrollPosition ( element horizontalScrollPane, float position )
bool guiScrollPaneSetScrollBars ( element scrollPane, bool horizontal, bool vertical )
bool guiScrollPaneSetVerticalScrollPosition ( element verticalScrollPane, float position )
bool guiSetAlpha ( element guielement, float alpha )
bool guiSetEnabled ( element guiElement, bool enabled )
bool guiSetFont ( element guiElement, mixed font )
bool guiSetInputEnabled ( bool enabled )
bool guiSetInputMode ( string mode )
bool guiSetPosition ( element theElement, float x, float y, bool relative )
bool guiSetProperty ( element guiElement, string property, string value )
bool guiSetSelectedTab ( element tabPanel, element theTab )
bool guiSetSize ( element gui, float width, float height, bool relative )
bool guiSetText ( element guiElement, string text )
bool guiSetVisible ( element guiElement, bool state )
int int guiStaticImageGetNativeSize ( element theImage )
bool guiStaticImageLoadImage ( element theElement, string filename )
bool guiWindowSetMovable ( element theElement, bool status )
bool guiWindowSetSizable ( element theElement, bool status )
float float float interpolateBetween ( float x1, float y1, float z1, float x2, float y2, float z2, float fProgress, string strEasingType, [ float fEasingPeriod, float fEasingAmplitude, float fEasingOvershoot ] )
bool isAmbientSoundEnabled( string theType )
bool isChatBoxInputActive ()
bool isConsoleActive ()
bool isControlEnabled ( player thePlayer, string control )
bool isCursorShowing ( player thePlayer )
bool isDebugViewActive ()
bool isElement ( var theValue )
bool isElementAttached ( element theElement )
bool isElementCallPropagationEnabled ( element theElement )
bool isElementCollidableWith ( element theElement, element withElement )
bool isElementDoubleSided ( element theElement )
bool isElementFrozen ( element theElement )
bool isElementInWater ( element theElement )
bool isElementLocal ( element theElement )
bool isElementLowLOD ( element theElement )
bool isElementOnScreen ( element theElement )
bool isElementStreamable ( element theElement )
bool isElementStreamedIn ( element theElement )
bool isElementSyncer ( element theElement )
bool isElementVisibleTo ( element theElement, element visibleTo )
bool isElementWithinColShape ( element theElement, colshape theShape )
bool isElementWithinMarker ( element theElement, marker theMarker )
bool isGarageOpen ( int garageID )
bool isGlitchEnabled ( string glitchName )
bool isGuestAccount ( account theAccount )
bool isInsideRadarArea ( radararea theArea, float posX, float posY )
bool isKeyBound ( player thePlayer, string key, [ string keyState, function handler ] )
bool isLineOfSightClear ( float startX, float startY, float startZ, float endX, float endY, float endZ, [ bool checkBuildings = true, bool checkVehicles = true, bool checkPeds = true, bool checkObjects = true, bool checkDummies = true, bool seeThroughStuff = false, bool ignoreSomeObjectsForCamera = false, element ignoredElement = nil ] )
bool isMTAWindowActive ()
bool isMainMenuActive ()
bool isObjectBreakable ( object theObject )
bool isObjectInACLGroup ( string theObject, aclgroup theGroup )
bool isPedChoking ( ped thePed )
bool isPedDead ( ped thePed )
bool isPedDoingGangDriveby ( ped thePed )
bool isPedDoingTask ( ped thePed, string taskName )
bool isPedDucked ( ped thePed )
bool isPedHeadless  ( ped thePed )
bool isPedInVehicle ( ped thePed )
bool isPedOnFire ( ped thePed )
bool isPedOnGround ( ped thePed )
bool isPedTargetingMarkerEnabled ( )
bool isPickupSpawned ( pickup thePickup )
bool isPlayerHudComponentVisible( string component )
bool isPlayerMapForced ( player thePlayer )
bool isPlayerMapVisible ()
bool isPlayerMuted ( player thePlayer )
bool isPlayerNametagShowing ( player thePlayer )
bool isRadarAreaFlashing ( radararea theRadararea )
bool isSoundPanningEnabled ( element theSound )
bool isSoundPaused ( element theSound )
bool isTimer ( timer theTimer )
bool isTrainDerailable ( vehicle vehicleToCheck )
bool isTrainDerailed ( vehicle vehicleToCheck )
bool isTransferBoxActive ()
bool isVehicleBlown ( vehicle theVehicle )
bool isVehicleDamageProof ( vehicle theVehicle )
bool isVehicleFuelTankExplodable ( vehicle theVehicle )
bool isVehicleLocked ( vehicle theVehicle )
bool isVehicleNitroActivated ( vehicle theVehicle )
bool isVehicleNitroRecharging ( vehicle theVehicle )
bool isVehicleOnGround ( vehicle theVehicle )
bool isVehicleTaxiLightOn ( vehicle taxi )
bool isVoiceEnabled ( )
bool isWaterDrawnLast ( )
bool isWorldSoundEnabled( int group, [ int index = -1 ] )
bool isWorldSpecialPropertyEnabled ( string propname )
bool kickPlayer ( player kickedPlayer, [ player responsiblePlayer, string reason = "" ] )
bool killPed ( ped thePed, [ ped theKiller = nil, int weapon=255, int bodyPart=255, bool stealth = false ] )
bool killTimer ( timer theTimer )
element loadMapData ( xmlnode node, element parent )
bool logIn ( player thePlayer, account theAccount, string thePassword )
bool logOut ( player thePlayer )
string md5 ( string str )
bool moveObject ( object theObject, int time, float targetx, float targety, float targetz, [ float moverx, float movery, float moverz, string strEasingType, float fEasingPeriod, float fEasingAmplitude, float fEasingOvershoot ] )
bool outputConsole ( string text, [ element visibleTo=getRootElement() ] )
bool outputDebugString ( string text, [ int level=3, int red=255, int green=255, int blue=255 ] )
bool outputServerLog ( string text )
element playSFX ( string containerName, int bankId, int soundId [, bool looped = false ] )
element playSFX3D ( string containerName, int bankId, int soundId, float x, float y, float z [, bool looped = false ] )
element playSound ( string soundPath, [ bool looped = false ] )
element playSound3D ( string soundPath, float x, float y, float z, [ bool looped = false ] )
bool playSoundFrontEnd ( player thePlayer, int sound )
bool pregFind ( string subject, string pattern [, int/string flags ] )
table pregMatch ( string base, string pattern [, int/string flags = 0, int maxResults = 100000 ] )
string pregReplace ( string subject, string pattern, string replacement [, int/string flags ] )
bool redirectPlayer ( player thePlayer, string serverIP, int serverPort, [ string serverPassword ] )
bool refreshResources ( [ bool refreshAll = false ] )
bool reloadBans()
bool reloadPedWeapon ( ped thePed )
bool removeAccount ( account theAccount )
bool removeBan ( ban theBan [, player responsibleElement = nil ] )
bool removeCommandHandler ( string commandName [, function handler] )
bool removeDebugHook( string hookType, function callbackFunction )
bool removeElementData ( element theElement, string key )
bool removeEventHandler ( string eventName, element attachedTo, function functionVar )
bool removePedClothes ( ped thePed, int clothesType, [ string clothesTexture, string clothesModel ] )
bool removePedFromVehicle ( ped thePed )
bool removePedJetPack ( ped thePed )
bool removeResourceDefaultSetting ( resource theResource, string settingName )
bool removeResourceFile ( resource theResource, string fileName )
bool removeRuleValue ( string key )
bool removeVehicleSirens ( vehicle theVehicle )
bool removeVehicleUpgrade ( vehicle theVehicle, int upgrade )
bool removeWorldModel ( int modelID, float radius, float x, float y, float z [, int interior = 0 ] )
bool renameResource ( string resourceName, string newResourceName, [ string organizationalPath ] )
bool resendPlayerModInfo ( player thePlayer )
bool resetAmbientSounds()
bool resetFarClipDistance()
bool resetFogDistance ()
bool resetHeatHaze()
bool resetMapInfo ( [player thePlayer = getRootElement()] )
bool resetMoonSize ( )
bool resetRainLevel ( )
bool resetSkyGradient()
bool resetSunColor ( )
bool resetSunSize ( )
bool resetTimer ( timer theTimer )
bool resetVehicleComponentPosition ( vehicle theVehicle, string theComponent )
bool resetVehicleComponentRotation ( vehicle theVehicle, string theComponent )
bool resetVehicleExplosionTime ( vehicle theVehicle )
bool resetVehicleIdleTime ( vehicle theVehicle )
bool resetWaterColor ( )
bool resetWaterLevel ()
bool resetWeaponFiringRate ( weapon theWeapon )
bool resetWindVelocity ( )
bool resetWorldSounds()
bool respawnObject ( object theObject )
bool respawnVehicle ( vehicle theVehicle )
bool restartResource ( resource theResource )
bool restoreAllWorldModels()
bool restoreWorldModel ( int modelID, float radius, float x, float y, float z [, int iInterior = -1 ] )
bool saveMapData ( xmlnode node, element baseElement [, bool childrenOnly = false ] )
bool set ( string settingName, var value )
bool setAccountData ( account theAccount, string key, string value )
bool setAccountPassword ( account theAccount, string password )
bool setAircraftMaxHeight ( float Height )
bool setAircraftMaxVelocity ( float velocity )
bool setAmbientSoundEnabled( string theType, bool enable )
bool setAnalogControlState ( string controlName [, float state] )
bool setBirdsEnabled ( bool enable )
bool setBlipColor ( blip theBlip, int red, int green, int blue, int alpha )
bool setBlipIcon ( blip theBlip, int icon )
bool setBlipOrdering ( blip theBlip, int ordering )
bool setBlipSize ( blip theBlip, int iconSize )
float setBlipVisibleDistance ( blip theBlip, float theDistance )
bool setPlayerBlurLevel ( player thePlayer, int level )
bool setCameraClip ( [ bool objects = true, bool vehicles = true ] )
bool setCameraGoggleEffect ( string goggleEffect )
bool setCameraInterior ( player thePlayer, int interior )
bool setCameraMatrix ( player thePlayer, float positionX, float positionY, float positionZ [, float lookAtX, float lookAtY, float lookAtZ, float roll = 0, float fov = 70 ] )
bool setCameraTarget ( player thePlayer [, player target = nil ] )
bool setCameraViewMode ( int viewMode )
bool setClipboard ( string theText )
bool setCloudsEnabled ( bool enabled )
bool setControlState ( player thePlayer, string control, bool state )
bool setCursorAlpha( int alpha )
bool setCursorPosition (int cursorX, int cursorY )
bool setDevelopmentMode ( bool enable )
bool setElementAlpha ( element theElement, int alpha )
bool setElementAttachedOffsets ( element theElement, [ float xPosOffset, float yPosOffset, float zPosOffset, float xRotOffset, float yRotOffset, float zRotOffset ])
bool setElementCallPropagationEnabled ( element theElement, bool enabled )
bool setElementCollidableWith ( element theElement, element withElement, bool enabled )
bool setElementCollisionsEnabled ( element theElement, bool enabled )
bool setElementData ( element theElement, string key, var value [, bool synchronize = true ] )
bool setElementDimension ( element theElement, int dimension )
bool setElementDoubleSided ( element theElement, bool enable )
bool setElementFrozen ( element theElement, bool freezeStatus )
bool setElementHealth ( element theElement, float newHealth )
bool setElementID ( element theElement, string name )
bool setElementInterior ( element theElement, int interior [, float x, float y, float z] )
bool setElementMatrix ( element theElement, table theMatrix )
bool setElementModel ( element theElement, int model )
bool setElementParent ( element theElement, element parent )
bool setElementPosition ( element theElement, float x, float y, float z [, bool warp = true ] )
bool setElementRotation ( element theElement, float rotX, float rotY, float rotZ [, string rotOrder = "default", bool conformPedRotation = false ] )
bool setElementStreamable ( element theElement, bool streamable )
bool setElementSyncer ( element theElement, player thePlayer )
bool setElementVelocity ( element theElement, float speedX, float speedY, float speedZ )
bool setElementVisibleTo ( element theElement, element visibleTo, bool visible )
bool setFPSLimit ( int fpsLimit )
bool setFarClipDistance ( float distance )
bool setFogDistance ( float distance )
bool setGameSpeed ( float value )
bool setGameType ( string gameType )
bool setGarageOpen ( int garageID, bool open )
bool setGlitchEnabled ( string glitchName, bool enable )
bool setGravity ( float level )
bool setHeatHaze ( int intensity, [ int randomShift = 0, int speedMin = 12, int speedMax = 18, int scanSizeX = 75, int scanSizeY = 80, int renderSizeX = 80, int renderSizeY = 85, bool bShowInside = false ] )
bool setHeliBladeCollisionsEnabled ( vehicle theVehicle, bool collisions )
bool setHelicopterRotorSpeed ( vehicle heli, float speed )
bool setInteriorFurnitureEnabled ( int roomID, bool enabled )
bool setInteriorSoundsEnabled ( bool enabled )
bool setJetpackMaxHeight ( float Height )
bool setJetpackWeaponEnabled(string weapon, bool enabled)
bool setLowLODElement ( element theElement, element lowLODElement )
bool setMapName ( string mapName )
bool setMarkerColor ( marker theMarker, int r, int g, int b, int a )
bool setMarkerIcon ( marker theMarker, string icon )
bool setMarkerSize ( marker theMarker, float size )
bool setMarkerTarget ( marker theMarker, float x, float y, float z )
bool setMarkerType ( marker theMarker, string markerType )
bool setMaxPlayers ( int slots )
bool setMinuteDuration ( int milliseconds )
bool setModelHandling ( int modelId, [ string property, var value ] )
bool setMoonSize ( int size )
bool setObjectBreakable ( object theObject, bool breakable )
bool setObjectMass ( object theObject, float mass )
bool setObjectScale ( object theObject, float scale [, float scaleY, float scaleZ ] )
bool setOcclusionsEnabled ( bool enabled )
bool setPedAimTarget ( ped thePed, float x, float y, float z )
bool setPedAnalogControlState ( ped thePed, string control, float state )
bool setPedAnimation ( ped thePed [, string block=nil, string anim=nil, int time=-1, bool loop=true, bool updatePosition=true, bool interruptable=true, bool freezeLastFrame = true] )
bool setPedAnimationProgress ( ped thePed [, string anim, float progress] )
bool setPedArmor ( ped thePed, float armor )
bool setPedCameraRotation ( ped thePed, float cameraRotation )
bool setPedCanBeKnockedOffBike ( ped thePed, bool canBeKnockedOffBike )
bool setPedChoking ( ped thePed, bool choking )
bool setPedControlState ( ped thePed, string control, bool state )
bool setPedDoingGangDriveby ( ped thePed, bool state )
bool setPedFightingStyle ( ped thePed, int style )
bool setPedFootBloodEnabled (element thePlayer, bool enabled)
bool setPedGravity ( ped thePed, float gravity )
bool setPedHeadless  ( ped thePed, bool headState )
bool setPedLookAt ( ped thePed, float x, float y, float z [, int time = 3000 [, int blend = 1000 ], element target = nil ] )
bool setPedOnFire ( ped thePed, bool isOnFire )
bool setPedOxygenLevel ( ped thePed, float oxygen )
bool setPedRotation ( ped thePed, float rotation [, bool conformPedRotation = false ] )
bool setPedStat ( ped thePed, int stat, float value )
bool setPedTargetingMarkerEnabled ( bool enabled )
bool setPedVoice ( ped thePed, string voiceType, string voiceName )
bool setPedWalkingStyle ( ped thePed, int style )
bool setPedWeaponSlot ( ped thePed, int weaponSlot )
bool setPickupRespawnInterval ( pickup thePickup, int ms )
bool setPickupType ( pickup thePickup, int theType, int amount/weapon/model, [ int ammo ] )
bool setPlayerAnnounceValue ( element thePlayer, string key, string value )
bool setPlayerBlurLevel ( player thePlayer, int level )
bool setPlayerHudComponentVisible ( player thePlayer, string component, bool show )
bool setPlayerMoney ( player thePlayer, int amount )
bool setPlayerMuted ( player thePlayer, bool state )
bool setPlayerName ( player thePlayer, string newName )
bool setPlayerNametagColor ( player thePlayer, int r, int g, int b )
bool setPlayerNametagShowing ( player thePlayer, bool showing )
bool setPlayerNametagText ( player thePlayer, string text )
bool setPlayerTeam ( player thePlayer, team theTeam )
bool setPlayerVoiceBroadcastTo ( element thePlayer, mixed broadcastTo )
bool setPlayerVoiceIgnoreFrom ( element thePlayer, mixed ignoreFrom )
bool setPlayerWantedLevel ( player thePlayer, int stars )
bool setProjectileCounter ( projectile projectile, int timeToDetonate )
bool setRadarAreaColor ( radararea theRadarArea, int r, int g, int b, int a )
bool setRadarAreaFlashing ( radararea theRadarArea, bool flash )
bool setRadarAreaSize ( radararea theRadararea, float x, float y )
bool setRadioChannel ( int ID )
bool setRainLevel ( float level )
bool setResourceDefaultSetting ( resource theResource, string settingName, string/int/float settingValue )
bool setResourceInfo ( resource theResource, string attribute, string value )
bool setRuleValue ( string key, string value )
bool setServerConfigSetting ( string name, string value, [ bool bSave = false ] )
bool setServerPassword ( string thePassword )
bool setSkyGradient ( [ int topRed = 0, int topGreen = 0, int topBlue = 0, int bottomRed = 0, int bottomGreen = 0, int bottomBlue = 0 ] )
bool setSoundEffectEnabled ( element sound, string effectName, bool bEnable )
bool setSoundMaxDistance ( element sound, int distance )
bool setSoundMinDistance ( element sound, int distance )
bool setSoundPan ( element theSound, float pan )
bool setSoundPanningEnabled ( element sound, bool enable )
bool setSoundPaused ( element theSound, bool paused )
bool setSoundPosition ( element theSound, int pos )
bool setSoundProperties(element sound, float fSampleRate, float fTempo, float fPitch, bool bReverse )
bool setSoundSpeed ( element theSound, float speed )
bool setSoundVolume ( element theSound, float volume )
bool setSunColor ( int aRed, int aGreen, int aBlue, int bRed, int bGreen, int bBlue  )
bool setSunSize ( int Size )
bool setTeamColor ( team theTeam, int colorR, int colorG, int colorB )
bool setTeamFriendlyFire ( team theTeam , bool friendlyFire )
bool setTeamName ( team theTeam, string newName )
bool setTime ( int hour, int minute )
timer setTimer ( function theFunction, int timeInterval, int timesToExecute, [ var arguments... ] )
bool setTrafficLightState ( int state )
bool setTrafficLightState ( string state )
bool setTrafficLightState ( string colorNS, string colorEW )
bool setTrafficLightsLocked ( bool toggle )
bool setTrainDerailable ( vehicle derailableVehicle, bool derailable )
bool setTrainDerailed ( vehicle vehicleToDerail, bool derailed )
bool setTrainDirection ( vehicle train, bool clockwise )
bool setTrainSpeed ( vehicle train, float speed )
bool setVehicleAdjustableProperty ( element theVehicle, int value )
bool setVehicleColor ( vehicle theVehicle, int r1, int g1, int b1, [int r2, int g2, int b2,] [int r3, int g3, int b3,] [int r4, int g4, int b4] )
bool setVehicleComponentPosition ( vehicle theVehicle, string theComponent, float posX, float posY, float posZ )
bool setVehicleComponentRotation ( vehicle theVehicle, string theComponent, float rotX, float rotY, float rotZ )
bool setVehicleComponentVisible ( vehicle theVehicle, string theComponent, bool visible )
bool setVehicleDamageProof ( vehicle theVehicle, bool damageProof )
bool setVehicleDirtLevel ( vehicle theVehicle, int dirtLevel )
bool setVehicleDoorOpenRatio ( vehicle theVehicle, int door, float ratio [, int time = 0] )
bool setVehicleDoorState ( vehicle theVehicle, int door, int state )
bool setVehicleDoorsUndamageable ( vehicle theVehicle, bool state )
bool setVehicleEngineState ( vehicle theVehicle, bool engineState )
bool setVehicleFuelTankExplodable ( vehicle theVehicle, bool explodable )
bool setVehicleGravity ( vehicle theVehicle, float x, float y, float z )
bool setVehicleHandling ( element theVehicle, string property, var value )
bool setVehicleHeadLightColor ( vehicle theVehicle, int red, int green, int blue)
bool setVehicleIdleRespawnDelay ( vehicle theVehicle, int timeDelay )
bool setVehicleLandingGearDown ( vehicle theVehicle, bool gearState )
bool setVehicleLightState ( vehicle theVehicle, int light, int state )
bool setVehicleLocked ( vehicle theVehicle, bool locked )
bool setVehicleNitroActivated ( vehicle theVehicle, bool state )
bool setVehicleNitroCount ( vehicle theVehicle, int count )
bool setVehicleNitroLevel ( vehicle theVehicle, float level )
bool setVehicleOverrideLights ( vehicle theVehicle, int value )
bool setVehiclePaintjob ( vehicle theVehicle, int value )
bool setVehiclePanelState ( vehicle theVehicle, int panelID, int state )
bool setVehiclePlateText( element theVehicle, string numberplate )
bool setVehicleRespawnDelay ( vehicle theVehicle, int timeDelay )
bool setVehicleRespawnPosition ( vehicle theVehicle, float x, float y, float z, [float rx, float ry, float rz ] )
bool setVehicleSirens ( vehicle theVehicle, int sirenPoint, float posX, float posY, float posZ, float red, float green, float blue, [float alpha = 255, float minAlpha = 0.0] )
bool setVehicleSirensOn ( vehicle theVehicle , bool sirensOn )
bool setVehicleTaxiLightOn ( vehicle taxi, bool LightState )
bool setVehicleTurnVelocity ( vehicle theVehicle, float rx, float ry, float rz )
bool setVehicleTurretPosition ( vehicle turretVehicle, float positionX, float positionY )
bool setVehicleVariant ( vehicle theVehicle, [ int variant1, int variant2 ] )
bool setVehicleWheelStates ( vehicle theVehicle, int frontLeft, [ int rearLeft = -1, int frontRight = -1, int rearRight = -1 ])
bool setWaterColor ( int red, int green, int blue, [ int alpha = 200 ] )
bool setWaterDrawnLast ( bool bEnabled )
bool setWaterLevel ( [water theWater,] float level )
bool setWaterLevel ( float level [, bool includeWaterFeatures = true, bool includeWaterElements = true ] )
bool setWaterVertexPosition ( water theWater, int vertexIndex, int x, int y, float z )
bool setWaveHeight ( float height )
bool setWeaponAmmo ( player thePlayer, int weapon, int totalAmmo, [int ammoInClip = 0] )
bool setWeaponClipAmmo ( weapon theWeapon, int clipAmmo )
bool setWeaponFiringRate ( weapon theWeapon, int firingRate )
bool setWeaponFlags ( weapon theWeapon, string theFlag, value theValue )
bool setWeaponOwner ( weapon theWeapon, player theOwner )
bool setWeaponProperty ( int weaponID/string weaponName, string weaponSkill, string property, int/float theValue )
bool setWeaponState ( weapon theWeapon, string theState )
bool setWeaponTarget ( weapon theWeapon, element theTarget, int iComponentID )
bool setWeather ( int weatherID )
bool setWeatherBlended ( int weatherID )
bool setWindVelocity ( float velocityX, float velocityY, float velocityZ )
bool setWorldSoundEnabled( int group, [ int index = -1, ] bool enable )
bool setWorldSpecialPropertyEnabled ( string propname, bool enable )
string sha256 ( string str )
bool showChat ( bool show )
bool showCursor ( player thePlayer, bool show, [ bool toggleControls = true ] )
bool setPlayerHudComponentVisible ( player thePlayer, string component, bool show )
bool shutdown ( string reason )
bool spawnPlayer ( player thePlayer, float x, float y, float z, [ int rotation = 0, int skinID = 0, int interior = 0, int dimension = 0, team theTeam = nil ] )
bool spawnVehicle ( vehicle theVehicle, float x, float y, float z [, float rx, float ry, float rz ] )
table split ( string stringToSplit, string / int separatingChar )
bool startResource ( resource resourceToStart, [bool persistent = false, bool startIncludedResources = true, bool loadServerConfigs = true, bool loadMaps = true, bool loadServerScripts = true, bool loadHTML = true, bool loadClientConfigs = true, bool loadClientScripts = true, bool loadFiles = true] )
bool stopObject ( object theobject )
bool stopResource ( resource theResource )
bool stopSound ( element theSound )
int string.byte(s [, i [, j]])
bool takeAllWeapons ( ped thePed )
bool takePlayerMoney ( player thePlayer, int amount )
bool takePlayerScreenShot( player thePlayer, int width, int height [ , string tag = "", int quality = 30, int maxBandwith = 5000 ] )
bool takeWeapon ( player thePlayer, int weaponId [, int ammo ] )
string teaDecode ( string data, string key )
string teaEncode ( string data, string key )
bool float float float testLineAgainstWater ( float startX, float startY, float startZ, float endX, float endY, float endZ )
textdisplay textCreateDisplay()
textitem textCreateTextItem ( string text, float x, float y, [string priority, int red = 255, int green = 255, int blue = 255, int alpha = 255, float scale = 1, string alignX = "left", string alignY = "top", int shadowAlpha = 0] )
bool textDestroyDisplay ( textdisplay display )
void textDestroyTextItem ( textitem theTextitem )
void textDisplayAddObserver ( textdisplay display, player playerToAdd )
void textDisplayAddText ( textdisplay displayToAddTo, textitem itemToAdd )
table textDisplayGetObservers ( textdisplay theDisplay )
bool textDisplayIsObserver ( textdisplay display, player thePlayer )
bool textDisplayRemoveObserver ( textdisplay display, player playerToRemove )
void textDisplayRemoveText ( textdisplay displayToRemoveFrom, textitem itemToRemove )
int int int int textItemGetColor ( textitem theTextItem )
float float textItemGetPosition ( textitem theTextItem )
int textItemGetPriority ( textitem textitemToCheck )
float textItemGetScale ( textitem theTextitem )
string textItemGetText ( textitem theTextitem )
bool textItemSetColor ( textitem theTextItem, int r, int g, int b, int a )
bool textItemSetPosition ( textitem theTextItem, float x, float y )
void textItemSetPriority ( textitem theTextItem, string priority )
bool textItemSetScale ( textitem theTextitem, float scale )
void textItemSetText ( textitem theTextitem, string text )
string toJSON ( var value )
int tocolor ( int red, int green, int blue [, int alpha = 255] )
bool toggleAllControls ( player thePlayer, bool enabled, [ bool gtaControls = true, bool mtaControls = true ] )
bool toggleControl ( player thePlayer, string control, bool enabled )
bool toggleObjectRespawn ( object theObject, bool respawn )
bool toggleVehicleRespawn ( vehicle theVehicle, bool Respawn )
bool triggerClientEvent ( [table/element sendTo=getRootElement()], string name, element sourceElement, [arguments...] )
bool triggerEvent ( string eventName, element baseElement, [ var argument1, ... ] )
bool triggerLatentClientEvent ( [table/element sendTo=getRootElement(),] string name, [int bandwidth=50000,] [bool persist=false,] element theElement, [arguments...] )
bool triggerLatentServerEvent ( string event, [int bandwidth=5000,] [bool persist=false,] element theElement, [arguments...] )
bool triggerServerEvent ( string event, element theElement, [arguments...] )
bool unbindKey ( player thePlayer, string key, string keyState, string command )
bool unbindKey ( player thePlayer, string key, [ string keyState, function handler  ] )
bool updateResourceACLRequest ( resource theResource, string rightName, bool access [, string byWho = "" ] )
bool usePickup ( pickup thePickup, player thePlayer )
string utfChar ( int characterCode )
int utfCode ( string theString )
int utfLen ( string theString )
int utfSeek ( string theString, int position )
string utfSub( string theString, int Start, int End )
bool warpPedIntoVehicle ( ped thePed, vehicle theVehicle, [ int seat=0 ] )
bool wasEventCancelled ( )
xmlnode xmlCopyFile ( xmlnode nodeToCopy, string newFilePath )
xmlnode xmlCreateChild ( xmlnode parentNode, string tagName )
xmlnode xmlCreateFile ( string filePath, string rootNodeName )
bool xmlDestroyNode ( xmlnode theXMLNode )
xmlnode xmlFindChild ( xmlnode parent, string tagName, int index )
xmlnode xmlLoadFile ( string filePath )
string xmlNodeGetAttribute ( xmlnode node, string name )
table xmlNodeGetAttributes ( xmlnode node )
table/xmlnode xmlNodeGetChildren ( xmlnode parent, [ int index ] )
string xmlNodeGetName ( xmlnode node )
xmlnode xmlNodeGetParent ( xmlnode node )
table/xmlnode xmlNodeGetChildren ( xmlnode parent, [ int index ] )
string xmlNodeGetValue ( xmlnode theXMLNode )
bool xmlNodeSetAttribute ( xmlnode node, string name, string/float value )
bool xmlNodeSetName ( xmlnode node, string name )
bool xmlNodeSetValue ( xmlnode theXMLNode, string value )
bool xmlSaveFile ( xmlnode rootNode )
bool xmlUnloadFile ( xmlnode node )